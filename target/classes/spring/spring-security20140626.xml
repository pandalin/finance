<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<beans:description>SpringSecurity安全配置</beans:description>
	
    <!-- <debug /> -->
	
	<http pattern="/common/css/**" security="none" />
	<http pattern="/common/js/**" security="none" />
	<http pattern="/common/plugins/**" security="none" />
	<http pattern="/common/images/**" security="none" />
	<http pattern="/common/**" security="none" />
	<http pattern="/index.jsp" security="none" />
	<http pattern="/loginfailed" security="none" />
	<http pattern="/login" security="none" />
	<http pattern="/admin/druid/**" security="none" />

	<global-method-security pre-post-annotations="enabled" />

	<http auto-config="false" use-expressions="true" entry-point-ref="myAuthenticationEntryPoint">
		
		<access-denied-handler error-page="/error/error/403"/>
		<anonymous enabled="false"/>
        <intercept-url pattern="/**" access="isAuthenticated()" />
        <logout logout-success-url="${logout-success-url}" invalidate-session="true" logout-url="${logout-url}" delete-cookies="JSESSIONID,CURRENT_MENU"/>
        <custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER"/>
        <custom-filter ref="myUsernamePasswordAuthticationFilter" position="FORM_LOGIN_FILTER" />
        <custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
        <session-management  invalid-session-url="${loginURL}" session-authentication-strategy-ref="compositeSessionAuthenticationStrategy"/>
	</http>
	
	<beans:bean id="myAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg name="loginFormUrl" value="${loginURL}" />
	</beans:bean>
	
	<beans:bean id="myUsernamePasswordAuthticationFilter" class="com.company.finance.security.MyUsernamePasswordAuthticationFilter">
		<beans:property name="successUrl" value="/welcome" />
		<beans:property name="failureUrl" value="/loginfailed" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="requiresAuthenticationRequestMatcher" ref="requiresAuthenticationRequestMatcher" />
		<beans:property name="sessionAuthenticationStrategy" ref="compositeSessionAuthenticationStrategy" />
	</beans:bean>
	
	<beans:bean id="requiresAuthenticationRequestMatcher" class="org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter$FilterProcessUrlRequestMatcher">
		<beans:constructor-arg name="filterProcessesUrl" value="${filterProcessesUrl}"/>
	</beans:bean>
	
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>
	
	<beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<beans:constructor-arg name="expiredUrl" value="${loginURL}" />
	</beans:bean>
	
	<beans:bean id="compositeSessionAuthenticationStrategy" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
					<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry"/>
					<beans:property name="maximumSessions" value="${maximumSessions}" />
					<beans:property name="exceptionIfMaximumExceeded" value="${exceptionIfMaximumExceeded}" />
				</beans:bean>
				<beans:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"/>
				<beans:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
					<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry"/>
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userService">
			<password-encoder ref="passwordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- 验证提示信息 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
  		<beans:property name="basenames" value="classpath:messages/messages"/>
  		<beans:property name="defaultEncoding" value="UTF-8"/>
  		<!-- 60秒 -->
  		<beans:property name="cacheSeconds" value="60"/>
	</beans:bean>
	
</beans:beans>